1. Controll unit (CU):
Eine der wichtigsten Komponenten der zentralen Verarbeitungseinheit (CPU) eines
Computers ist die Steuereinheit (CU). Sie hat die Aufgabe von Steuern des Prozessors.
Eine CU verfügt üblicherweise einen Binärdecodierer, damit die Kodierten Befehle in 
Zeitsteuerungs- und Steuersignale umgewandelt werden können, die den Betrieb der 
anderen Einheiten wie z. B. (Speicher, Eingabe- und Ausgabegeräte und arithmetisch-logische
Einheit) steuern.
--------------------------------------------------------------------------------------------
Inputs: op, func3, func7
Outputs: RegWriteD, ResultSrcD, MemWriteD, JumpD, BranchD, ALUControlD, ALUSrcD, ImmSrcD, ToAccelerator, FromAccelerator
--Erklärung der Inputs und Outputs der Steuereinheit ist erwünscht--
--------------------------------------------------------------------------------------------
2. Instruction memory:
Ein Speicher, in dem alle auszuführenden Instruktionen bzw. Befehle stattfinden, heißt Instruktionsspeicher.
Jeder Befehl ist 4 Byte lang und hat eine Nummer, diese Nummer ist die Adresse des Befehls.
--------------------------------------------------------------------------------------------
Inputs: A (32-Bit die Adresse der nächst auszuführenden Instruktion)
Outputs: RD (32-Bit die ausgelesene Adresse der Instruktion)
--------------------------------------------------------------------------------------------
3.Program counter (PC):
Ein Progtammzähler (PC) ist ein Register im Computerprozessor. Er enthält die Adresse des
nächsten Befehls aus dem Speicher, der als nächstes ausgeführt wird. 
--------------------------------------------------------------------------------------------
Inputs: PC' (32 Bit)
Outputs: PC (32 Bit)
--------------------------------------------------------------------------------------------
4. Register file:
Eine Registerdatei ist sozusagen ein Speichermittel der CPU. Sie enthält Datenbits und Abbildungsstellen,
die bestimmte Adressen spezifizieren. Diese Adresse sind die Eingangskomponenten einer Registerdatei.
Es gibt auch als Eingaben Daten, eine Schreib- und Lesefunktion und eine Ausführungsfunktion.
---------------------------------------------------------------------------------------------
Inputs: A1, A2, A3, WD3, WE3
Outputs: RD1, RD2
---------------------------------------------------------------------------------------------
5. Arithmetic logic unit (ALU):
Eine arithmetisch-logische Einheit ist eine Hauptkomponente der Verarbeitungseinheit. Es führt alle
arithmetischen und logischen Operationen aus.
---------------------------------------------------------------------------------------------
Inputs: SrcAE, SrcBE, ALUControlE
Outputs: ALUResult
--------------------------------------------------------------------------------------------- 
6. Data memory:
Hier werden die Daten gespeichert. Man kann die Daten sowohl aus dem Speicher auslesen als auch in 
den Speicher einschreiben.
---------------------------------------------------------------------------------------------
Inputs: A, WD, WE
Outputs: RD
---------------------------------------------------------------------------------------------
7. Hazard unit:
Hazard Begriff ist für die Fälle geeignet, in denen Anweisungen in der Pipeline zu falschen Antworten führen.
Die Hazard unit steuert sozusagen das Pipeline-Verfahren und verhindert die Fehler.
Es unterscheiden sich drei Arten von Hazards:
1) Structural hazards:
Hier ist der Fall, wenn zwei Instruktionen versuchen, die gleichen Ressourcen zu benutzen.
2) Data hazards:
Hier ist der Fall, wenn eine Instruktion versucht, die Daten zu verwenden, bevor die Daten in
der Registerdatei zur Verfügung stehen.
3) Control hazards:
Control hazard tritt auf, wegen der bedingten und unbedingten Verzweigung.
---------------------------------------------------------------------------------------------
* Pipeline-Verfahren in RISC-V:
Das Grundkonzept von Pipeline ist das, dass jeder Befehl bzw. jede Instruktion pro zyklus abgerufen
und in fünf Stufen ausgeführt wird.
----------------------------------------------------------------------------------------------
- Instruction fetch (IF):
Hier wird erstmal den auszuführenden Befehl aus dem Instruktionsspeicher geholt, der 32-Bit lang ist.
Denn alle Instruktionen in RISC haben die gleiche Länge von 4 Byte. Nachdem der Befehl aus dem Instruktionsspeicher
abgerufen wird, wird gleichzeitig eine Berechnung durchgeführt, damit die nächste Adresse in PC bestimmt wird.
Es wird immer PC+4 berechnet, es sei denn, dass es der Fall einer Verzweigung (branch), eines Sprungs oder
einer Ausnahme.
----------------------------------------------------------------------------------------------
- Instruction decode (ID):
Nachdem der Befehl von IF geholt wird, wird hier die Befehlbits dekodiert, um zu wissen, was die Art
des Befehls ist und welche Aufgabe er besitzt. Darüber hinaus werden die Indizes der Beiden Register, die 
in die Registerdatei einfließen, identifiziert und die Indizes dem Registerspeicher als Addresse präsentiert.
----------------------------------------------------------------------------------------------
- Execute (IE):
In dieser Stufe befindet sich die eigentliche Berechnung. Sie enthält typischerweise eine ALU und 
einen Bitschieber (engl. shifter).
----------------------------------------------------------------------------------------------
- Memory access (MEM):
Diese Stufe erfolgt, nur wenn einen Zugriff auf den Datenspeicher notwendig ist. Während dieser Stufe
werden die Ergebnisse von den Befehlen and die nächste Stufe weitergeleitet.
----------------------------------------------------------------------------------------------
- Writeback (WB):
In dieser Stufe schreiben sowohl Einzelzyklus- als auch Zweizyklusbefehle ihre Ergebnisse
in die Registerdatei. Zu beachten ist, dass zwei Stufe gleichzeitig einen Zugriff auf die Registerdatei
(der ID und WB). Ein Problem könnte auftreten, wenn bei der Dekodierungsstufe ein Quellregister ausgelesen
wird und dieses Register das Zielregister bei der Rückschreibstufe ist. D. h. dieselben Speicherzellen
in der Registerdatei gleihzeitig gelesen und geschrieben.
----------------------------------------------------------------------------------------------